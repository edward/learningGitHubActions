name: Check for Contributor License Agreement signature

# Controls when the workflow will run
on:
  pull_request:
    types:
      - opened
#     branches: [ "main" ]

  # Allow this workflow to be manually executed from the Actions tab
  workflow_dispatch: 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This is the job name:
  check-contributor-license-agreement:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
    
    
#       # Checks if the author has signed the feenk CLA
#       - name: Make HTTP request
#         run: |
# ruby -e '
#   response_code = `curl -s -o /dev/null --write-out "%{http_code}\n" "https://contributor-license-agreement-database.gadget.app/signatureExistsFor?gitHubUsername=${{ github.event.pull_request.user.login }}"`

# if Integer(response_code) == 200
#   exit 0
# else
#   `curl -L \
#   -X POST \
#   -H "Accept: application/vnd.github+json" \
#   -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
#   -H "X-GitHub-Api-Version: 2022-11-28" \
#   ${{ github.event.pull_request.comments_url }} \
#   -d \'{"body":"Please sign the CLA at https://gtoolkit.com/contributor-license-agreement/"}\'`
# end
# '

#      - name: Check JSON response
#        run: |
#          echo "${{ steps.http.outputs }}" # output the JSON response
#          echo "${{ steps.http.outputs.data }}" # output the JSON response
#          # you can now use a JSON parsing tool to extract the desired data from the response
